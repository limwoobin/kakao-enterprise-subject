spring:
  application:
    name: spotify-song-subject

  # R2DBC Configuration for reactive operations
  r2dbc:
    url: r2dbc:h2:mem:///testdb;MODE=MySQL
    username: sa
    password:
    pool:
      initial-size: 20
      max-size: 50
      max-idle-time: 30m
      max-acquire-time: 5s
      max-create-connection-time: 5s
      validation-query: SELECT 1

  # Disable SQL initialization (handled by R2dbcConfig)
  sql:
    init:
      mode: always

  # H2 Console Configuration (for debugging)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: false

  # Redis Configuration (Traditional and Reactive)
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
      reactive:
        host: 127.0.0.1
        port: 6379
        password:

# Data Initialization Configuration
data:
  directory: data
  skip-download-if-exists: true
  initialization:
    enabled: true  # 데이터 초기화 활성화 (테스트 환경에서는 false로 설정)
  batch:
    size: 100
  buffer:
    size: 131072  # 128KB 버퍼
  parallel:
    batches: 5

# Google Drive Configuration
google:
  drive:
    file:
      id: 1VDXbTqEH15B3oyHCXjgAI2lHa9aSmCcy

# Logging
logging:
  level:
    com:
      example:
        spotify_song_subject: INFO
    org:
      springframework:
        data:
          r2dbc: INFO
    io:
      r2dbc:
        h2: INFO
